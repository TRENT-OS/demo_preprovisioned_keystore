/**
 * Copyright (C) 2019, Hensoldt Cyber GmbH
 */

import <std_connector.camkes>;

import "components/DemoApp/DemoApp.camkes";

import <if_OS_Entropy.camkes>;

#include "system_config.h"

#include "EntropySource/camkes/EntropySource.camkes"
DECLARE_COMPONENT_EntropySource(EntropySource)

#include "UART/Uart.camkes"
DECLARE_COMPONENT_UART(UART)

#include "ChanMux/ChanMux.camkes"
ChanMux_DEFINE_COMPONENT(ChanMux,
        chanMuxStorage, chan)

#include "ChanMux_Storage/ChanMux_Storage.camkes"

assembly {
    composition {

        // UART
        DECLARE_AND_CONNECT_INSTANCE_UART(
            UART, uartDrv)

        // ChanMux
        ChanMux_DECLARE_AND_CONNECT_INSTANCE_TO_UART(ChanMux, chanMux, uartDrv)

        // ChanMux_Storage
        component   ChanMux_Storage chanMuxStorage;

        ChanMux_INSTANCE_CONNECT_INTERFACE(chanMux, chanMuxStorage)
        ChanMux_INSTANCE_CONNECT_CHANNEL(chanMux, chanMuxStorage, chan)

        // DemoApp
        component   DemoApp             demoApp;

        connection  seL4RPCCall         demoApp_chanMux_storage     (from demoApp.storage_rpc,  to chanMuxStorage.storage_rpc);
        connection  seL4SharedData      demoApp_chanMux_storage_port(from demoApp.storage_port, to chanMuxStorage.storage_port);

        DECLARE_AND_CONNECT_INSTANCE_EntropySource(
            EntropySource,
            entropySource,
            demoApp.entropy_rpc,
            demoApp.entropy_port)
    }
    configuration {
        CONFIGURE_INSTANCE_UART(
            uartDrv,
            CFG_CHANMUX_DEFAULT_UART_PHYS_ADDR,
            CFG_CHANMUX_DEFAULT_UART_INTR)

        // assign endpoint badges for n:1 RPC interface of ChanMUX. The generic
        // naming scheme is <component>.<interface>_attributes = <badge ID>
        ChanMux_ASSIGN_CLIENT_BADGE(chanMux, chanMuxStorage, CHANMUX_ID)
    }
}